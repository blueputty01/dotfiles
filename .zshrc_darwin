export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# PATH="$HOME/.config/emacs/bin:$PATH"

# --- deno setup ---
# Add deno completions to search path
if [[ ":$FPATH:" != *":$HOME/.zsh/completions:"* ]]; then export FPATH="$HOME/.zsh/completions:$FPATH"; fi
. "$HOME/.deno/env"

# asdf setup
export ASDF_DATA_DIR=$HOME/.asdf
export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"

# --- bun setup ---
# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# --- convenience features ---
eval "$(zoxide init zsh)"

export GPG_TTY=$(tty)

export CALIBRE_DEVELOP="/Applications/calibre.app/Contents/MacOS"

export PATH="/usr/local/opt/tcl-tk/bin:$PATH"

export PATH=$PATH:~/Library/Android/sdk/emulator/

export PATH="/opt/homebrew/opt/libpq/bin:$PATH"

eval $(opam env --switch=4.14.0)

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
